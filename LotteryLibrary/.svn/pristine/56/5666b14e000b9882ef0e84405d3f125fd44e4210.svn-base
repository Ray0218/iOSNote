//
//  lottery_ljy.h
//  LotteryLibrary
//
//  Created by wufan on 15/4/30.
//  Copyright (c) 2015年 DACAI. All rights reserved.
//
//  浙江6+1
//

#ifndef lottlib_lottery_ljy_h_
#define lottlib_lottery_ljy_h_

#include <string>
#include "common_macro.h"

#define LJY_NUMBER_COUNT    10

namespace lottlib {
    
    struct Message;
    class SmartBasket;
    class LotteryLjy {
    public:
        LotteryLjy();
        ~LotteryLjy();
        
        /**
         *  请求投注页面数据
         *
         *  @param obj_uuid [in]
         *
         *  @return cmdId
         */
        int NWRefresh(const char *caller);
        
        /**
         *  清空所有数据(包括投注内容和投注页面数据)
         *
         */
        int Cleanup();
        
#pragma mark - 投注页面数据相关
        /**
         *  投注页面是否有数据
         *
         *  @return <0表示失败, 0表示无数据, >0表示有数据
         */
        int HasData();
        
        /**
         *  获取当前期信息
         *
         *  @param game_name [out]期号名称
         *  @param deadline  [out]截止时间
         *  @param draw_date [out]开奖时间
         *
         *  @return <0表示失败, >=0表示成功
         */
        int GetGameStatus(int &game_name, std::string &deadline, std::string &draw_date);
        
        /**
         *  获取历史开奖号码
         *
         *  @param index     [in]距当前期的索引. 上期传0, 上上期传1, 以此类推, 只提供
         *                       近10期的数据, 即值的范围为 0~9
         *  @param game_name [out]期号名称
         *  @param results   [out]开奖号码
         *
         *  @note results长度为7
         *
         *  @return <0表示失败, 0表示未开奖, >=1表示已开奖
         */
        int GetHistory(int index, int &game_name, int results[7]);
        
        /**
         *  获取遗漏值
         *
         *  @param index      [in]行索引, e.g. 直选: 百位传0, 十位传1, 个位传2; 组选: 传0
         *  @param miss_value [out]遗漏值
         *
         *  @return <0表示失败, >=0表示成功
         */
        int GetMiss(int index, int miss_value[LJY_NUMBER_COUNT]);
        
#pragma mark - 投注内容数据相关
        
        /**
         *  注数计算
         *
         *  @param num1    [in]第一位选号内容
         *  @param num2    [in]第二位选号内容
         *  @param num3    [in]第三位选号内容
         *  @param num4    [in]第四位选号内容
         *  @param num5    [in]第五位选号内容
         *  @param num6    [in]第六位选号内容
         *  @param num7    [in]第七位选号内容
         *
         *  @note num1, num2, num3, num4, num5, num6, num7数组长度为10
         *
         *  @return <0表示失败, >=0表示计算所得注数
         */
        int NotesCalculate(int num1[LJY_NUMBER_COUNT], int num2[LJY_NUMBER_COUNT], int num3[LJY_NUMBER_COUNT], int num4[LJY_NUMBER_COUNT],
                           int num5[LJY_NUMBER_COUNT], int num6[LJY_NUMBER_COUNT], int num7[LJY_NUMBER_COUNT]);
        
        /**
         *  获取中转界面的投注内容(单数或复式)
         *
         *  @param index   [in]在中转界面中的索引
         *  @param note    [out]注数
         *  @param num1    [out]第一位选号内容
         *  @param num2    [out]第二位选号内容
         *  @param num3    [out]第三位选号内容
         *  @param num4    [out]第四位选号内容
         *  @param num5    [out]第五位选号内容
         *  @param num6    [out]第六位选号内容
         *  @param num7    [out]第七位选号内容
         *
         *  @note note数组长度为1, num1, num2, num3, num4, num5, num6, num7数组长度为10
         *
         *  @return <0表示失败, >=0表示成功
         */
        int GetTarget(int index, int &note, int num1[LJY_NUMBER_COUNT], int num2[LJY_NUMBER_COUNT], int num3[LJY_NUMBER_COUNT],
                      int num4[LJY_NUMBER_COUNT], int num5[LJY_NUMBER_COUNT], int num6[LJY_NUMBER_COUNT], int num7[LJY_NUMBER_COUNT]);
        
        /**
         *  在中转界面头部添加一注内容(单数或复式)
         *
         *  @param num1    [in]第一位选号内容
         *  @param num2    [in]第二位选号内容
         *  @param num3    [in]第三位选号内容
         *  @param num4    [in]第四位选号内容
         *  @param num5    [in]第五位选号内容
         *  @param num6    [in]第六位选号内容
         *  @param num7    [in]第七位选号内容
         *
         *  @note num1, num2, num3, num4, num5, num6, num7数组长度为10
         *
         *  @return <0表示失败, >=0表示成功
         */
        int AddTarget(int num1[LJY_NUMBER_COUNT], int num2[LJY_NUMBER_COUNT], int num3[LJY_NUMBER_COUNT], int num4[LJY_NUMBER_COUNT],
                      int num5[LJY_NUMBER_COUNT], int num6[LJY_NUMBER_COUNT], int num7[LJY_NUMBER_COUNT]);
        
        /**
         *  修改中转界面中指定的一注内容(单数或复式)
         *
         *  @param index   [in]在中转界面中的索引
         *  @param num1    [in]第一位选号内容
         *  @param num2    [in]第二位选号内容
         *  @param num3    [in]第三位选号内容
         *  @param num4    [in]第四位选号内容
         *  @param num5    [in]第五位选号内容
         *  @param num6    [in]第六位选号内容
         *  @param num7    [in]第七位选号内容
         *
         *  @note num1, num2, num3, num4, num5, num6, num7数组长度为10
         *
         *  @return <0表示失败, >=0表示成功
         */
        int ModifyTarget(int index, int num1[LJY_NUMBER_COUNT], int num2[LJY_NUMBER_COUNT], int num3[LJY_NUMBER_COUNT], int num4[LJY_NUMBER_COUNT],
                         int num5[LJY_NUMBER_COUNT], int num6[LJY_NUMBER_COUNT], int num7[LJY_NUMBER_COUNT]);
        /**
         *  删除中转界面的一注内容
         *
         *  @param index [in]在中转界面中的索引
         *
         *  @return <0表示失败, >=0表示成功
         */
        int DeleteTarget(int index);
        
        /**
         *  获取中转界面总行数
         *
         *  @return <0表示失败, >=0表示总行数
         */
        int GetTargetCount();
        
        /**
         *  获取中转界面总注数
         *
         *  @return <0表示失败, >=0表示总注数
         */
        int GetTotalNotes();
        
    private:
        int CallbackRefresh(int result, Message msg);
        
        
        
        DISALLOW_COPY_AND_ASSIGN(LotteryLjy);
        
        SmartBasket *basket_;
    };
}

#endif /* defined(lottlib_lottery_ljy_h_) */
